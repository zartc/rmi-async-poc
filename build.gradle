 /*
  * This build file was auto generated by running the Gradle 'init' task
  * by 'zart colwing' at '8/2/16 5:06 PM' with Gradle 2.14
  *
  * For more details take a look at the Java Quickstart chapter in the Gradle
  * user guide available at https://docs.gradle.org/2.14/userguide/tutorial_java_projects.html
  */
  
// https://speakerdeck.com/bmuschko/state-of-the-art-gradle-multi-module-builds
 
buildscript {
    repositories {
        mavenCentral()
        maven { url 'http://repo.spring.io/plugins-release' }
    }
    
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.0.RELEASE")
        classpath("org.springframework.build.gradle:propdeps-plugin:0.0.7")
    }
}


configure(allprojects) {
    apply plugin: 'propdeps'
    apply plugin: 'propdeps-eclipse'
}


subprojects {
	apply plugin: "java"
	apply plugin: "eclipse"
	
	group = "zc.studdy.rpc.rmi"
	version = "1.0"
	
	sourceCompatibility = 1.8

	repositories {
		mavenCentral()
	}
	
	compileJava.dependsOn(processResources)
	
	eclipse {
		classpath {
			defaultOutputDir = file('build/classes/main')
		}
	}
}


project(":module-server") {
	apply plugin: "spring-boot"
	
    dependencies {
	    compile("org.springframework.boot:spring-boot-starter") 
	   // compile("org.springframework.boot:spring-boot-starter-actuator")
	    
		compile("org.slf4j:slf4j-api")
		compile("javax.inject:javax.inject:1")

		compile project(":module-shared")
		optional("org.springframework.boot:spring-boot-configuration-processor:+")
		
		// Declare the dependency for your favourite test framework you want to use in your tests.
		// TestNG is also supported by the Gradle Test task. Just change the
		// testCompile dependency to testCompile 'org.testng:testng:6.8.1'
		// and add 'test.useTestNG()' to your build script.
		testCompile("junit:junit")
	}
}

project(":module-shared") {
	dependencies {
		compile("org.slf4j:slf4j-api:1.7+")
		compile("org.apache.commons:commons-lang3:+")
	}
}

/*
project(":module-client") {
	dependencies {
		compile project(":module-shared")
	}
}

project(":module-application") {
	dependencies {
		compile project(":module-client")
	}
}
*/
